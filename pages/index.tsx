import { BiCheckCircle, BiIdCard } from 'react-icons/bi';
import {
  Box,
  FormControl,
  FormHelperText,
  FormErrorMessage,
  FormLabel,
  Image,
  Input,
  Stack,
  Button,
  InputGroup,
  InputLeftElement,
  useToast,
  Icon,
} from '@chakra-ui/react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import loginSchema from '@schema/login.schema';
import ky from '@lib/ky';

const Home: NextPage = () => {
  const toast = useToast();
  const {
    handleSubmit,
    register,
    formState: { errors, touchedFields, isSubmitting },
  } = useForm({
    mode: 'onBlur',
    defaultValues: { id: '' },
    resolver: yupResolver(loginSchema),
  });

  const onSubmit = async (form: any) => {
    try {
      const res = await ky
        .post('Login/Login/ActivoUrbano', {
          json: { username: form.id, password: form.id.slice(-4) },
        })
        .json();
      console.log(res);
    } catch (error) {
      toast({
        title: 'Combinación inválida',
        description:
          'No se pudo iniciar sesión, verifique su documento de identidad.',
        isClosable: true,
        status: 'error',
      });
    }
  };

  const onFailure = (values: any) => {
    console.error(values);
  };

  return (
    <>
      <Head>
        <title>Zona Activa | Activo Urbano</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" type="image/png" href="favicon.png" />
      </Head>
      <Box bg="gray.700" width="full" height="full">
        <Stack
          align="center"
          justify="center"
          style={{ width: '100%', height: '100%' }}
        >
          <Box
            bg="gray.800"
            borderTopColor="yellow.600"
            borderTopWidth="5px"
            borderRadius="lg"
            boxShadow="base"
            overflow="hidden"
            w={['100%', '480px', '640px', '720px']}
          >
            <Image
              src="/au_240.png"
              alt="Activo Urbano"
              style={{ margin: '0 auto', padding: '1.5rem' }}
            />
            <Box p="6">
              <form onSubmit={handleSubmit(onSubmit, onFailure)}>
                <FormControl isInvalid={!!errors.id}>
                  <FormLabel htmlFor="user-id" color="white">
                    Documento de identidad
                  </FormLabel>
                  <InputGroup>
                    <InputLeftElement pointerEvents="none">
                      <Icon as={BiIdCard} color="gray.300" />
                    </InputLeftElement>
                    <Input
                      id="user-id"
                      type="text"
                      color="white"
                      placeholder="zonaactiva"
                      isInvalid={!!errors.id}
                      {...register('id')}
                    />
                  </InputGroup>
                  {errors.id ? (
                    <FormErrorMessage>{errors.id?.message}</FormErrorMessage>
                  ) : touchedFields.id ? (
                    <FormHelperText color="green.300">
                      <Icon as={BiCheckCircle} />
                      <span> Tu documento de identidad es válido</span>
                    </FormHelperText>
                  ) : (
                    <FormHelperText color="gray.400">
                      Ingresa tu documento de identidad
                    </FormHelperText>
                  )}
                </FormControl>
                <Button
                  mt={4}
                  isFullWidth
                  colorScheme="yellow"
                  bgColor="yellow.500"
                  _hover={{ backgroundColor: 'yellow.600' }}
                  isLoading={isSubmitting}
                  type="submit"
                >
                  Iniciar Sesión
                </Button>
              </form>
            </Box>
          </Box>
        </Stack>
      </Box>
    </>
  );
};

export default Home;
